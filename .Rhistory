library(rvest)
library(stringr)
library(tidyr)
library(dummies)
library(quantmod)
getStockAnalystPriceTarget <- function (ticker){
url <- paste0('https://www.marketbeat.com/stocks/NASDAQ/', ticker, '?MostRecent=0')
webpage<-read_html(url)
targets_table <- html_nodes(webpage,'table')
targetsOrignial <- html_table(targets_table)[[3]]
getClosingPrice <- getSymbols(ticker,auto.assign = FALSE)
priceTargets <- targetsOrignial
#filter df so we only have dates before 1yr ( "2016-06-09")
priceTargets$Date <-as.POSIXlt(priceTargets$Date,format = "%m/%d/%Y")
priceTargets <- subset(priceTargets, Date < as.POSIXlt("2016-06-09"))
if(nrow(priceTargets)>0){
#filter the df by removing rows that have blank price targets
priceTargets <- subset(priceTargets, priceTargets$"Price Target" != "")
#drop unnecessary columns in df
drops <- c("Impact on Share Price","Details")
priceTargets <- priceTargets[ , !(names(priceTargets) %in% drops)]
#clean price target values in df (this also removes arrows)
priceTargets$"Price Target" <- sub(".*[^.]+-> ","", priceTargets$"Price Target")
priceTargets$"Price Target" <- gsub(",", "", priceTargets$"Price Target")
priceTargets$"Price Target" <- as.numeric(sub("\\$","",priceTargets$"Price Target"))
#Remove the previous rating in Rating column this is before ->.  (For ex.  Hold -> Buy will become Buy). We are only considering current ratings.
priceTargets$"Rating" <- sub("...[^.]+->.","", priceTargets$"Rating")
priceTargets$"Price After One Year"<- -1
priceTargets$"Price Difference"<- -1
priceTargets$"Ticker" <- ticker
for(i in 1:nrow(priceTargets)){
targetSetDate <- priceTargets[i,1]
targetEndDate <- targetSetDate
targetEndDate$year <- targetSetDate$year+1
priceAfterYear <- as.numeric(getClosingPrice[as.character(targetEndDate)][,4])
#Quantmod returns null for some of the dates especially when the day is saturday, sunday, or holiday
while(any(priceAfterYear) == FALSE){
targetEndDate$mday <-targetEndDate$mday+1
priceAfterYear <- as.numeric(getClosingPrice[as.character(targetEndDate)][,4])
}
if((priceAfterYear - priceTargets[i,5]) > 0){
priceTargets[i,7] <- 1
}
else{
priceTargets[i,7] <- 0
}
priceTargets[i,6] <-priceAfterYear
}
return(priceTargets)
}
else{
return(NULL)
}
}
finaldf
Nasdaq100Tickers <- c("ATVI","ADBE","AKAM","ALXN","GOOG","GOOGL","AMZN","AAL","AMGN","ADI","AAPL","AMAT","ADSK","ADP","BIDU","BIIB","BMRN","AVGO","CA","CELG","CERN","CHTR","CHKP","CTAS","CSCO","CTXS","CTSH","CMCSA","COST","CSX","CTRP","XRAY","DISCA","DISCK","DISH","DLTR","EBAY","EA","EXPE","ESRX","FB","FAST","FISV","GILD","HAS","HSIC","HOLX","IDXX","ILMN","INCY","INTC","INTU","ISRG","JBHT","JD","KLAC","LRCX","LBTYA","LBTYK","LILA","LILAK","LVNTA","QVCA","MAR","MAT","MXIM","MCHP","MU","MSFT","MDLZ","MNST","MYL","NTES","NFLX","NCLH","NVDA","ORLY","PCAR","PAYX","PYPL","QCOM","REGN","ROST","STX","SHPG","SIRI","SWKS","SBUX","SYMC","TMUS","TSLA","TXN","KHC","PCLN","TSCO","FOX","FOXA","ULTA","VRSK","VRTX","VIAB","VOD","WBA","WDC","WYNN","XLNX","YHOO")
finaldf<-NULL
for (eachTicker in head(Nasdaq100Tickers)){
print(eachTicker)
df <- getStockAnalystPriceTarget(eachTicker)
finaldf <- rbind(finaldf,a)
}
Nasdaq100Tickers <- c("ATVI","ADBE","AKAM","ALXN","GOOG","GOOGL","AMZN","AAL","AMGN","ADI","AAPL","AMAT","ADSK","ADP","BIDU","BIIB","BMRN","AVGO","CA","CELG","CERN","CHTR","CHKP","CTAS","CSCO","CTXS","CTSH","CMCSA","COST","CSX","CTRP","XRAY","DISCA","DISCK","DISH","DLTR","EBAY","EA","EXPE","ESRX","FB","FAST","FISV","GILD","HAS","HSIC","HOLX","IDXX","ILMN","INCY","INTC","INTU","ISRG","JBHT","JD","KLAC","LRCX","LBTYA","LBTYK","LILA","LILAK","LVNTA","QVCA","MAR","MAT","MXIM","MCHP","MU","MSFT","MDLZ","MNST","MYL","NTES","NFLX","NCLH","NVDA","ORLY","PCAR","PAYX","PYPL","QCOM","REGN","ROST","STX","SHPG","SIRI","SWKS","SBUX","SYMC","TMUS","TSLA","TXN","KHC","PCLN","TSCO","FOX","FOXA","ULTA","VRSK","VRTX","VIAB","VOD","WBA","WDC","WYNN","XLNX","YHOO")
finaldf<-NULL
for (eachTicker in head(Nasdaq100Tickers)){
print(eachTicker)
df <- getStockAnalystPriceTarget(eachTicker)
finaldf <- rbind(finaldf,df)
}
head(finaldf)
print(finaldf$Rating[!duplicated(finaldf$Rating)])
finaldf <-cbind(finaldf, dummy(finaldf$Firm))
finaldf <-cbind(finaldf, dummy(finaldf$Action))
finaldf <-cbind(finaldf, dummy(finaldf$Rating))
#clean columns names by removing df name in front of it
for (col in names(finaldf)){
if(any((grep("finaldf", col) == 1))){
colnames(finaldf)[which(names(finaldf) == col)]<- gsub("finaldf","",col)
}
}
print(head(finaldf))
print(names(finaldf))
write.csv(file = "AnalystRatingData/ratingtest.csv",finaldf)
write.csv(file = "AnalystRatingData/ratingtest.csv",finaldf,index=FALSE)
write.csv(file = "AnalystRatingData/ratingtest.csv",finaldf,index=FALSE)
write.csv(file = "AnalystRatingData/ratingtest.csv",finaldf, index=False)
write.csv(file = "AnalystRatingData/ratingtest.csv",data = finaldf, index=False)
write.csv(file = "AnalystRatingData/ratingtest.csv",finaldf, row.names=FALSE)
"e" %in% c("jpne","home")
"homee" %in% c("jpne","home")
"home" %in% c("jpne","home")
getStockAnalystPriceTarget <- function (ticker){
url <- paste0('https://www.marketbeat.com/stocks/NASDAQ/', ticker, '?MostRecent=0')
webpage<-read_html(url)
targets_table <- html_nodes(webpage,'table')
targetsOrignial <- html_table(targets_table)[[3]]
getClosingPrice <- getSymbols(ticker,auto.assign = FALSE)
priceTargets <- targetsOrignial
#filter df so we only have dates before 1yr ( "2016-06-09")
priceTargets$Date <-as.POSIXlt(priceTargets$Date,format = "%m/%d/%Y")
priceTargets <- subset(priceTargets, Date < as.POSIXlt("2016-06-09"))
if(nrow(priceTargets)>0){
#filter the df by removing rows that have blank price targets and ratings
priceTargets <- subset(priceTargets, priceTargets$"Price Target" != "")
#priceTargets <- subset(priceTargets, priceTargets$"Rating" != "")
#drop unnecessary columns in df
drops <- c("Impact on Share Price","Details")
priceTargets <- priceTargets[ , !(names(priceTargets) %in% drops)]
#clean price target values in df (this also removes arrows)
priceTargets$"Price Target" <- sub(".*[^.]+-> ","", priceTargets$"Price Target")
priceTargets$"Price Target" <- gsub(",", "", priceTargets$"Price Target")
priceTargets$"Price Target" <- as.numeric(sub("\\$","",priceTargets$"Price Target"))
#Remove the previous rating in Rating column this is before ->.  (For ex.  Hold -> Buy will become Buy). We are only considering current ratings.
priceTargets$"Rating" <- sub("...[^.]+->.","", priceTargets$"Rating")
priceTargets$"Price After One Year"<- -1
priceTargets$"Price Difference"<- -1
priceTargets$"Ticker" <- ticker
for(i in 1:nrow(priceTargets)){
targetSetDate <- priceTargets[i,1]
targetEndDate <- targetSetDate
targetEndDate$year <- targetSetDate$year+1
priceAfterYear <- as.numeric(getClosingPrice[as.character(targetEndDate)][,4])
#Quantmod returns null for some of the dates especially when the day is saturday, sunday, or holiday
while(any(priceAfterYear) == FALSE){
targetEndDate$mday <-targetEndDate$mday+1
priceAfterYear <- as.numeric(getClosingPrice[as.character(targetEndDate)][,4])
}
#Analyst said buy and price actually increased
if((priceAfterYear - priceTargets[i,5]) > 0 && !(priceTargets[i,4] %in% c('Underweight','Sell','Underperform'))){
priceTargets[i,7] <- 1
}
#Analyst said sell and price acutally decreased
else if(((priceAfterYear - priceTargets[i,5]) <= 0) && (priceTargets[i,4] %in% c('Underweight','Sell','Underperform'))){
priceTargets[i,7] <- 1
}
#If analyst is wrong
else{
priceTargets[i,7] <- 0
}
priceTargets[i,6] <-priceAfterYear
}
return(priceTargets)
}
else{
return(NULL)
}
}
Nasdaq100Tickers <- c("ATVI","ADBE","AKAM","ALXN","GOOG","GOOGL","AMZN","AAL","AMGN","ADI","AAPL","AMAT","ADSK","ADP","BIDU","BIIB","BMRN","AVGO","CA","CELG","CERN","CHTR","CHKP","CTAS","CSCO","CTXS","CTSH","CMCSA","COST","CSX","CTRP","XRAY","DISCA","DISCK","DISH","DLTR","EBAY","EA","EXPE","ESRX","FB","FAST","FISV","GILD","HAS","HSIC","HOLX","IDXX","ILMN","INCY","INTC","INTU","ISRG","JBHT","JD","KLAC","LRCX","LBTYA","LBTYK","LILA","LILAK","LVNTA","QVCA","MAR","MAT","MXIM","MCHP","MU","MSFT","MDLZ","MNST","MYL","NTES","NFLX","NCLH","NVDA","ORLY","PCAR","PAYX","PYPL","QCOM","REGN","ROST","STX","SHPG","SIRI","SWKS","SBUX","SYMC","TMUS","TSLA","TXN","KHC","PCLN","TSCO","FOX","FOXA","ULTA","VRSK","VRTX","VIAB","VOD","WBA","WDC","WYNN","XLNX","YHOO")
finaldf<-NULL
for (eachTicker in head(Nasdaq100Tickers)){
print(eachTicker)
df <- getStockAnalystPriceTarget(eachTicker)
finaldf <- rbind(finaldf,df)
}
head(finaldf)
print(finaldf$Rating[!duplicated(finaldf$Rating)])
finaldf
finaldf[finaldf$Rating =="Sell"]
finaldf$Rating =="Sell"
finaldf$Rating[finaldf$Rating =="Sell"]
finaldf[finaldf$Rating =="Sell"]
finaldf[finaldf.Rating.isin(['Sell', 'Underperform'])]
finaldf[which(finaldf$Rating == 'Sell', ]
finaldf[which(finaldf$Rating == 'Sell', )]
finaldf[which(finaldf$Rating == 'Sell')]
finaldf$Rating[which(finaldf$Rating == 'Sell')]
finaldf$"Price Difference"[which(finaldf$Rating == 'Sell')]
finaldf$"Price Target"[which(finaldf$Rating == 'Sell')]
finaldf$"Price After One Yeart"[which(finaldf$Rating == 'Sell')]
finaldf$"Price After One Year"[which(finaldf$Rating == 'Sell')]
finaldf$"Price After One Year"[which(finaldf$Rating == 'Underperform')]
finaldf$"Price Target"[which(finaldf$Rating == 'Underperform')]
finaldf$"Price Difference"[which(finaldf$Rating == 'Underperform')]
library(rvest)
library(stringr)
library(tidyr)
library(dummies)
library(quantmod)
getStockAnalystPriceTarget <- function (ticker){
url <- paste0('https://www.marketbeat.com/stocks/NASDAQ/', ticker, '?MostRecent=0')
webpage<-read_html(url)
targets_table <- html_nodes(webpage,'table')
targetsOrignial <- html_table(targets_table)[[3]]
getClosingPrice <- getSymbols(ticker,auto.assign = FALSE)
priceTargets <- targetsOrignial
#filter df so we only have dates before 1yr ( "2016-06-09")
priceTargets$Date <-as.POSIXlt(priceTargets$Date,format = "%m/%d/%Y")
priceTargets <- subset(priceTargets, Date < as.POSIXlt("2016-06-09"))
if(nrow(priceTargets)>0){
#filter the df by removing rows that have blank price targets and ratings
priceTargets <- subset(priceTargets, priceTargets$"Price Target" != "")
#priceTargets <- subset(priceTargets, priceTargets$"Rating" != "")
#drop unnecessary columns in df
drops <- c("Impact on Share Price","Details")
priceTargets <- priceTargets[ , !(names(priceTargets) %in% drops)]
#clean price target values in df (this also removes arrows)
priceTargets$"Price Target" <- sub(".*[^.]+-> ","", priceTargets$"Price Target")
priceTargets$"Price Target" <- gsub(",", "", priceTargets$"Price Target")
priceTargets$"Price Target" <- as.numeric(sub("\\$","",priceTargets$"Price Target"))
#Remove the previous rating in Rating column this is before ->.  (For ex.  Hold -> Buy will become Buy). We are only considering current ratings.
priceTargets$"Rating" <- sub("...[^.]+->.","", priceTargets$"Rating")
priceTargets$"Price After One Year"<- -1
priceTargets$"Price Difference"<- -1
priceTargets$"Ticker" <- ticker
for(i in 1:nrow(priceTargets)){
targetSetDate <- priceTargets[i,1]
targetEndDate <- targetSetDate
targetEndDate$year <- targetSetDate$year+1
priceAfterYear <- as.numeric(getClosingPrice[as.character(targetEndDate)][,4])
#Quantmod returns null for some of the dates especially when the day is saturday, sunday, or holiday
while(any(priceAfterYear) == FALSE){
targetEndDate$mday <-targetEndDate$mday+1
priceAfterYear <- as.numeric(getClosingPrice[as.character(targetEndDate)][,4])
}
#Analyst said buy and price actually increased
if((priceAfterYear - priceTargets[i,5]) > 0 && !(priceTargets[i,4] %in% c('Underweight','Sell','Underperform'))){
priceTargets[i,7] <- 1
}
#Analyst said sell and price acutally decreased
else if(((priceAfterYear - priceTargets[i,5]) <= 0) && (priceTargets[i,4] %in% c('Underweight','Sell','Underperform'))){
priceTargets[i,7] <- 1
}
#If analyst is wrong
else{
priceTargets[i,7] <- 0
}
priceTargets[i,6] <-priceAfterYear
}
return(priceTargets)
}
else{
return(NULL)
}
}
Nasdaq100Tickers <- c("ATVI","ADBE","AKAM","ALXN","GOOG","GOOGL","AMZN","AAL","AMGN","ADI","AAPL","AMAT","ADSK","ADP","BIDU","BIIB","BMRN","AVGO","CA","CELG","CERN","CHTR","CHKP","CTAS","CSCO","CTXS","CTSH","CMCSA","COST","CSX","CTRP","XRAY","DISCA","DISCK","DISH","DLTR","EBAY","EA","EXPE","ESRX","FB","FAST","FISV","GILD","HAS","HSIC","HOLX","IDXX","ILMN","INCY","INTC","INTU","ISRG","JBHT","JD","KLAC","LRCX","LBTYA","LBTYK","LILA","LILAK","LVNTA","QVCA","MAR","MAT","MXIM","MCHP","MU","MSFT","MDLZ","MNST","MYL","NTES","NFLX","NCLH","NVDA","ORLY","PCAR","PAYX","PYPL","QCOM","REGN","ROST","STX","SHPG","SIRI","SWKS","SBUX","SYMC","TMUS","TSLA","TXN","KHC","PCLN","TSCO","FOX","FOXA","ULTA","VRSK","VRTX","VIAB","VOD","WBA","WDC","WYNN","XLNX","YHOO")
finaldf<-NULL
for (eachTicker in Nasdaq100Tickers){
print(eachTicker)
df <- getStockAnalystPriceTarget(eachTicker)
finaldf <- rbind(finaldf,df)
}
